idRef {
  id: "53dcac89643431f9fc06dba0"
}
ui_name: "s001_interrogation"
nodes {
  idRef {
    id: "53dd0e406434313d23a408da"
  }
  index: 0
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Corporate Salaryman"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Scientist"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 1
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Corporate Salaryman"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Scientist"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Find Some Clothes Suitable for Work"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 6
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53e48b12643431fe15e50a10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53dd0e5f6434313d23a408e5"
  }
  index: 1
  text: "{{GM}}Surprisingly, there are already people in your office. Not your co-workers, but two tired-looking women with badges. Omaha PD, by the looks of it$(scene.racismFactor). It\'s strange to see them here, considering Alcamai has extraterritoriality rights in Nebraska and is normally off-limits to police. The two try to make an effort to look casual, but don\'t quite pull it off.{{/GM}}\n\nGood morning, $(story.pc_polite_salutation). I\'m detective Tamaryk, and this is my partner, detective Wainwright. I\'m assuming you are $(story.pc_firstname) $(story.pc_lastname)?"
  branches {
    responseText: "Yes, that\'s me. What\'s this all about?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "Call me $(story.pc_firstname), please. How can I help you?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "We will. Or someone in Seattle will.\n\n{{GM}}A reassuring tone of voice really work for detective Wainwright.{{/GM}}"
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{CC}}Administrative section{{/CC}}Aren\'t you a bit out of your jurisdiction? This compound is Alcamai Cosmetics soil, and Omaha PD has no authority here."
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "pc_careerpath"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Administrative"
        }
      }
    }
    nextNodeIndex: 3
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Detectives. I believe I play golf with your captain, Queseda. What can I do for you?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: -0.2
        }
      }
    }
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd0e5f6434313d23a408ea"
  }
  index: 2
  text: "Yeah, real cute, never heard that one before."
  branches {
    responseText: ""
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
  actions {
    ops {
      functionName: "Add To Variable (float)"
      args {
        call_value {
          functionName: "Get Variable (float)"
          args {
            string_value: "Suspicion"
          }
        }
      }
      args {
        float_value: 0.1
      }
    }
  }
}
nodes {
  idRef {
    id: "53ecd0f7643431b99131b9fd"
  }
  index: 3
  text: "We\'re not here under the authority of Omaha PD, but rather Hildebrandt-Kleinfort-Bernal. HBK are investigating an insurance claim, and since they\'ve got no presence in Omaha, the city picked up the contract. As you undoubtedly know, HBK has an operational agreement with Alcamai.\n\n{{GM}}She hands you an extraterritoriality visa document for both of the detectives. It\'s signed by a junior VP of Alcamai, all proper and orderly.{{/GM}}"
  branches {
    responseText: "Oh, fellow corporate lackeys then. Well, what can I do for you?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "I see."
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "So this is a financial matter then?"
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ecd425643431b99131ba02"
  }
  index: 4
  text: "Not quite."
  branches {
    responseText: "Interesting."
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "Great,"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd18346434313d23a409d9"
  }
  index: 5
  text: "{{GM}}The detectives share a quick glance; slightly concerned that you are politically connected. They don\'t immediately apologize and leave, however.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd0e7c6434313d23a408f8"
  }
  index: 6
  text: "{{GM}}Surprisingly, there are already people in your office. Not your co-workers, but two tired-looking women with badges. Omaha PD, by the looks of it$(scene.racismFactor).  It\'s strange to see them here, considering Alcamai has extraterritoriality rights in Nebraska and is normally off-limits to police. They try to make an effort to look casual, but your street clothes earn a raised eyebrow from both.{{/GM}}\n\nGood morning, $(story.pc_polite_salutation). I\'m detective Tamaryk, and this is my partner, detective Wainwright. I\'m assuming you are $(story.pc_firstname) $(story.pc_lastname)?"
  branches {
    responseText: "Yes, that\'s me. What\'s this all about?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "Call me $(story.pc_firstname), please. How can I help you?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "Sorry, the donut shop is across the street."
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  branches {
    responseText: "Violating the office dress code is a crime now? Drek."
    nextNodeIndex: 7
  }
  branches {
    responseText: "{{CC}}Administrative section{{/CC}}Aren\'t you a bit out of your jurisdiction? This compound is Alcamai Cosmetics soil, and Omaha PD has no authority here."
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "pc_careerpath"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Administrative"
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Detectives. I believe I play golf with your captain, Queseda. What can I do for you?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: -0.2
        }
      }
    }
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd0e7c6434313d23a40900"
  }
  index: 7
  text: "Wearing something like that ought to be, but that\'s not why we\'re here."
  branches {
    responseText: ""
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd18d16434313d23a409dd"
  }
  index: 8
  text: "{{GM}}The detectives share a quick glance; slightly concerned that you are politically connected. They don\'t immediately apologize and leave, however.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd1cd46434313d23a409e0"
  }
  index: 9
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Variable (int)"
                args {
                  string_value: "currentLoop"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Variable (int)"
                args {
                  string_value: "investigation"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 3
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 10
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 11
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 26
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 32
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
      }
    }
    nextNodeIndex: 44
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "investigation"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 47
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd1d816434313d23a40a17"
  }
  index: 10
  text: "$(scene.mainInterrogation)"
  branches {
    responseText: "Professionally, my title is $(story.pc_jobtitle), what about my expertise?"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "mainInterrogation"
            }
          }
        }
        args {
          string_value: "What about our other questions?"
        }
      }
    }
    nextNodeIndex: 11
    onlyOnce: true
    idRef {
      id: "53dd238d6434313d23a40ae5"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I just returned from a vacation, I think I spent my last 24 hours stuck on an airport in Seattle."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 2
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "mainInterrogation"
            }
          }
        }
        args {
          string_value: "What about our other questions?"
        }
      }
    }
    nextNodeIndex: 26
    onlyOnce: true
    idRef {
      id: "53dd24136434313d23a40b50"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t exactly have a family as such."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 3
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "investigation"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "mainInterrogation"
            }
          }
        }
        args {
          string_value: "What about our other questions?"
        }
      }
    }
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "53dd24176434313d23a40b51"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Should I call my lawyer for this?"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 4
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "mainInterrogation"
            }
          }
        }
        args {
          string_value: "What about our other questions?"
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd24216434313d23a40b52"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd22f16434313d23a40ae1"
  }
  index: 11
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "pc_careerpath"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Risk Management"
        }
      }
    }
    nextNodeIndex: 12
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (string)"
            args {
              call_value {
                functionName: "Get Story Variable (string)"
                args {
                }
                args {
                  string_value: "pc_careerpath"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              string_value: "Thaumaturgy"
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (string)"
            args {
              call_value {
                functionName: "Get Story Variable (string)"
                args {
                }
                args {
                  string_value: "pc_careerpath"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              string_value: "Spirit Relations"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
  }
  branches {
    responseText: ""
    nextNodeIndex: 19
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "means"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "currentLoop"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "investigation"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "nextLoop"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "53dd32ce6434313d23a40edd"
  }
  index: 12
  text: "They call it \"risk management\", but we all know what it really means: corporate wet work. You do that kind of stuff, $(story.pc_lastname)? Violent persuasion, assassination, threatening the opposition, kidnapping?"
  branches {
    responseText: "We know what it means, but I\'m not going to answer that."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 13
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}} That\'s not what it means! I\'m a mathematician and a statistician, not some kind of hired killer!"
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 14
  }
  branches {
    responseText: "{{CC}}Intelligence 3 (Lie){{/CC}} You\'re thinking \"operative risk management\". I\'m in actual risk management, which is not quite as exciting, violent or illegal."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "I think I could use a lawyer."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd38546434313d23a410e5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd340d6434313d23a40ee1"
  }
  index: 13
  text: "Yeah, we didn\'t really expect you to."
  branches {
    responseText: "So."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd34876434313d23a40f10"
  }
  index: 14
  text: "{{GM}}Tamaryk rolls her eyes.{{/GM}}"
  branches {
    responseText: "Whatever."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd40176434313d23a4167f"
  }
  index: 15
  text: "Your expertise is \"$(story.pc_careerpath)\". Magic is a dangerous and potent force. How about the forces that you command? You know some dangerous things, right? Everyone who\'s got the gift does.\n\n{{GM}}You realize that Wainwright wears a talisman and her eyes have the darkness of someone who knows of the occult. About time for even Omaha PD to start hiring mages.{{/GM}}"
  branches {
    responseText: "Everyone does. That doesn\'t mean anything."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 16
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}} Actually I don\'t wield any magic, but don\'t tell my boss. He\'d fire me."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 17
  }
  branches {
    responseText: "{{CC}}Intelligence 4{{/CC}} As a fellow practicioner - is this really a direction you want to take this? This line of questioning sounds a bit like a witch hunt to me."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 18
    hideIfUnavailable: true
  }
  branches {
    responseText: "I think I could use a lawyer."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd38546434313d23a410e5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd40176434313d23a41682"
  }
  index: 16
  text: "Not by itself it doesn\'t."
  branches {
    responseText: "I assume there is a point to all this?"
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd40176434313d23a41688"
  }
  index: 17
  text: "You are an idiot."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dd43426434313d23a41693"
  }
  index: 18
  text: "... True. Believe me, I wouldn\'t like a situation where all of us were regarded with suspicion."
  branches {
    responseText: "So let\'s not go there."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddc092643431cf41e50a84"
  }
  index: 19
  text: "We\'d like to know if you possess any combat training, dangerous magical training or expertise with other immediately hazardous areas of skill?"
  branches {
    responseText: "{{CC}}Close Combat 2 / Chi Casting 1{{/CC}} My hands are basically registered as lethal weapons."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.4
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 20
  }
  branches {
    responseText: "{{CC}}Ranged Combat 2{{/CC}} Yes, I can shoot a gun."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 21
  }
  branches {
    responseText: "{{CC}}Drone Combat 1{{/CC}} I do know about battle drones if that\'s what you mean."
    conditions {
      ops {
        functionName: "Compare Actor Specialization"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSpecializations"
            }
            args {
              int_value: 8
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 22
  }
  branches {
    responseText: "{{CC}}Spellcasting / Conjuring / Summoning 2{{/CC}} I believe you already know that I\'m magically gifted."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 7
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 8
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
                args {
                  int_value: 2
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 23
  }
  branches {
    responseText: "No. I\'ve never needed anything of the sort."
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "AND"
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 4
                    }
                  }
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              call_value {
                functionName: "AND"
                args {
                  call_value {
                    functionName: "Compare Actor Skill"
                    args {
                      call_value {
                        functionName: "Get Map Item (Player)"
                        args {
                          int_value: 0
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "Get Preset Value (int)"
                        args {
                          string_value: "BaseOrCurrent"
                        }
                        args {
                          int_value: 0
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "Get Preset Value (int)"
                        args {
                          string_value: "ActorSkills"
                        }
                        args {
                          int_value: 3
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "Get Preset Value (int)"
                        args {
                          string_value: "Comparison Ops"
                        }
                        args {
                          int_value: 4
                        }
                      }
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "AND"
                    args {
                      call_value {
                        functionName: "Compare Actor Skill"
                        args {
                          call_value {
                            functionName: "Get Map Item (Player)"
                            args {
                              int_value: 0
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Get Preset Value (int)"
                            args {
                              string_value: "BaseOrCurrent"
                            }
                            args {
                              int_value: 0
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Get Preset Value (int)"
                            args {
                              string_value: "ActorSkills"
                            }
                            args {
                              int_value: 7
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "Get Preset Value (int)"
                            args {
                              string_value: "Comparison Ops"
                            }
                            args {
                              int_value: 4
                            }
                          }
                        }
                        args {
                          int_value: 2
                        }
                      }
                    }
                    args {
                      call_value {
                        functionName: "AND"
                        args {
                          call_value {
                            functionName: "Compare Actor Skill"
                            args {
                              call_value {
                                functionName: "Get Map Item (Player)"
                                args {
                                  int_value: 0
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Preset Value (int)"
                                args {
                                  string_value: "BaseOrCurrent"
                                }
                                args {
                                  int_value: 0
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Preset Value (int)"
                                args {
                                  string_value: "ActorSkills"
                                }
                                args {
                                  int_value: 8
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Get Preset Value (int)"
                                args {
                                  string_value: "Comparison Ops"
                                }
                                args {
                                  int_value: 4
                                }
                              }
                            }
                            args {
                              int_value: 2
                            }
                          }
                        }
                        args {
                          call_value {
                            functionName: "AND"
                            args {
                              call_value {
                                functionName: "Compare Actor Specialization"
                                args {
                                  call_value {
                                    functionName: "Get Map Item (Player)"
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "BaseOrCurrent"
                                    }
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "ActorSpecializations"
                                    }
                                    args {
                                      int_value: 8
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "Comparison Ops"
                                    }
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  int_value: 0
                                }
                              }
                            }
                            args {
                              call_value {
                                functionName: "Compare Actor Skill"
                                args {
                                  call_value {
                                    functionName: "Get Map Item (Player)"
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "BaseOrCurrent"
                                    }
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "ActorSkills"
                                    }
                                    args {
                                      int_value: 4
                                    }
                                  }
                                }
                                args {
                                  call_value {
                                    functionName: "Get Preset Value (int)"
                                    args {
                                      string_value: "Comparison Ops"
                                    }
                                    args {
                                      int_value: 0
                                    }
                                  }
                                }
                                args {
                                  int_value: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "No Condition"
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}} Absolutely not! I resent the implication that I\'m some kind of a bad-ass!"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
    }
    nextNodeIndex: 24
  }
  branches {
    responseText: "{{CC}}Administrative Section (Lie) {{/CC}} No. It is the policy of Alcamai Chemicals that all combat training and the like shall be disclosed on the Employee Security Sheet, and you\'ve probably already seen mine."
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "pc_careerpath"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Administrative"
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 25
    hideIfUnavailable: true
  }
  branches {
    responseText: "This sounds like the kind of question one should answer only when a lawyer is present."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd38546434313d23a410e5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddcd3d643431cf41e50bff"
  }
  index: 20
  text: "A kung-fu whiz, eh?"
  branches {
    responseText: "More like kraw maga."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "It keeps me in shape."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddcc97643431cf41e50b7b"
  }
  index: 21
  text: "Not exactly a rare skill these days, right?"
  branches {
    responseText: "Right."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "It\'s one I need for basic self defense."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddcddd643431cf41e50c8f"
  }
  index: 22
  text: "You need that kind of knowledge often with the industrial robots around here?"
  branches {
    responseText: "You\'d be surprised."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "No, it\'s something I rarely need these days."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddcba1643431cf41e50b75"
  }
  index: 23
  text: "Well, it is fairly obvious.\n\n{{GM}}From her talisman and a certain look in her eye, you can pretty much tell that Wainwright is a magician herself.{{/GM}}"
  branches {
    responseText: "Takes one to know one.\n"
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "So, is there more?"
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddca2e643431cf41e50b71"
  }
  index: 24
  text: "Trust me, $(story.pc_lastname), that\'s really not what\'s being implied here. Having access to means of violence does not make you cool, it only makes you a suspect. But I guess that\'s a \"yes\"."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddc986643431cf41e50b00"
  }
  index: 25
  text: "Yes, of course it would show up there.\n\n{{GM}}And if Alcamai was a bigger company, that would probably even be true.{{/GM}}"
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd2c1b6434313d23a40ba0"
  }
  index: 26
  text: "Seattle, right, right. Nice city, if a bit chaotic sometimes.\n\nYou were just in transit weren\'t you? Spent all your time at the airport? Is there anyone who can confirm that you never left the terminal?"
  branches {
    responseText: "Not really, no. They kept delaying my flight and finally I got fed up and just tried to sleep."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}} Actually I ran into an old friend and we spent the time in a bar chatting."
    nextNodeIndex: 27
  }
  branches {
    responseText: "{{CC}}Decking 1{{/CC}} I think it would show up on my data footprint if I\'d logged off at any time."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.2
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 29
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Summoning 2{{/CC}} I did commune with an air spirit. We discussed the weather, basically."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 8
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 30
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Strength 3{{/CC}} I went to the gym there for a few hours. Not too many people there; they\'d probably remember me."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 31
    hideIfUnavailable: true
  }
  branches {
    responseText: "I\'d like to talk with my lawyer before answering that."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd38546434313d23a410e5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "opportunity"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "currentLoop"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "investigation"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "nextLoop"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddd3d7643431cf41e50f41"
  }
  index: 27
  text: "We\'d like their name and contact information."
  branches {
    responseText: "... okay, you got me, I spent all the time by myself."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Fujiko Omatsune, the tri-vid star. I can give you her contact information, but I cannot guarantee she\'s going to get back to you very fast as her schedule is normally rather busy."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.2
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 28
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Charisma 4{{/CC}} Well, maybe not exactly an old friend. However, here\'s the number I got from a new friend I met at the bar. She can vouch for the couple of hours we spent together."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddd601643431cf41e50f45"
  }
  index: 28
  text: "You know Fujiko Omatsune? My daughter would love her autograph!\n\n{{GM}}Wainwright glares at her partner, she glances back and shrugs.{{/GM}}\n\nShe really would, though."
  branches {
    responseText: "I\'ll have to see what I can do."
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddd81e643431cf41e50fe9"
  }
  index: 29
  text: "Matrix footprints are not particularily difficult to forge, but if that\'s what you\'ve got, it\'s better than nothing."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddd9b6643431cf41e51084"
  }
  index: 30
  text: "Spirits are usually not really that reliable as witnesses, and their grasp of location can be tenous. I suppose that still counts for something."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dddaad643431cf41e51135"
  }
  index: 31
  text: "All right, we\'ll check with them. I guess someone like you would stick in their mind."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd2c1f6434313d23a40ba5"
  }
  index: 32
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 33
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 34
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "No Effect"
      }
    }
    nextNodeIndex: 35
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 38
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "motive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    nextNodeIndex: 41
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "currentLoop"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "nextLoop"
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
}
nodes {
  idRef {
    id: "53dde3ec643431cf41e511eb"
  }
  index: 33
  text: "No, I read that you\'re an orphan. Raised in a state orphanage in Saskatoon. You have come quite a way from those humble origins. I guess most state orphans end up in the slums or prison, but here you are, having a career with one of the most promising employers in Nebraska. How\'d you manage that, all by yourself?"
  branches {
    responseText: "Plain luck, I guess."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t give up easily."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  branches {
    responseText: "Just because I\'m an orphan doesn\'t mean I\'m \"all by myself\"."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "motive"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "currentLoop"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "nextLoop"
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
}
nodes {
  idRef {
    id: "53dde479643431cf41e511f2"
  }
  index: 34
  text: "You did have something slightly like a family, didn\'t you, once at least? Your next of kin was listed as \"sister\" at one point. Brooklyn $(story.pc_lastname), right? But not for a few years."
  branches {
    responseText: "Brooklyn. Yeah. She\'s my sister. I also have brothers and other sisters."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Etiquette: Academic{{/CC}} I didn\'t really keep in touch with her that much after I graduated from university along with my brother, Noah. We didn\'t really have that much in common, unfortunately."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 19
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 32
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Me and my brother Alexander went to a different direction from her. We found our way into polite society, in our own ways."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 32
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "motive"
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddf0076434313360058f8e"
  }
  index: 35
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 36
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 37
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "motive"
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddf0766434313360058f91"
  }
  index: 36
  text: "{{GM}}Detective Tamaryk adopts an obviously fake look of confusion.{{/GM}}\n\nSo, Brooklyn is your sister. Only she\'s, you know.\n\nA troll.\n\nAnd you\'re ... not."
  branches {
    responseText: "It was a state orphanage, all six of us were abandoned, and they didn\'t have a clue about anyone\'s parents. They assigned us the same last name based on some algorhitm. We decided to roll with it. Since we didn\'t have a biological family, we decided to make one. We were just kids."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  branches {
    responseText: "The specifics of this really are none of your goddamn business, detective."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddf14c6434313360058f9b"
  }
  index: 37
  text: "It says here that you also have other siblings. And one of them is ... \n\n... an elf. And another is an ork.\n\nDid your mother have a really wild party or something?"
  branches {
    responseText: "It was a state orphanage, all six of us were abandoned, and they didn\'t have a clue about anyone\'s parents. They assigned us the same last name based on some algorhitm. We decided to roll with it. Since we didn\'t have a biological family, we decided to make one. We were just kids."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  branches {
    responseText: "Fuck you, detective."
    nextNodeIndex: 32
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddf238643431336005907d"
  }
  index: 38
  text: "Okay, Brooklyn is your sister. No need to get agitated.\n\nAnother thing, though. Does \"$(l.name)\" mean anything to you?"
  branches {
    responseText: "Wha- That was my nickname as a kid, my sisters and brothers used it. How\'d you know it?"
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 39
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}}No. Never heard of it in my life."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
    }
    nextNodeIndex: 40
  }
  branches {
    responseText: "... I don\'t know where you\'re going with this, but I\'d like to speak to my lawyer."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 44
    onlyOnce: true
    idRef {
      id: "53dd38546434313d23a410e5"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Charisma 3 (Lie) {{/CC}} \"$(s.name)\" ... nope, doesn\'t ring a bell."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "motive"
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddf4d86434313360059146"
  }
  index: 39
  text: "A nickname. How cute."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddf50c643431336005920d"
  }
  index: 40
  text: "Sure you haven\'t. Just checking."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53ddf905643431336005963e"
  }
  index: 41
  text: "Glad we could sort that out.\n\nSo, does \"$(l.name)\" mean anything to you? At all?"
  branches {
    responseText: "That was my nickname as a kid, my sisters and brothers used it. How\'d you know it?"
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 42
  }
  branches {
    responseText: "{{CC}}Lie{{/CC}} No. Never heard of it in my life."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.6
        }
      }
    }
    nextNodeIndex: 43
  }
  branches {
    responseText: "{{CC}}Intelligence 4 (Lie) {{/CC}} Not sure, but it sounds like something Brooklyn made up when we were children."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.1
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "motive"
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddf9056434313360059641"
  }
  index: 42
  text: "A nickname. How cute."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53ddf9056434313360059647"
  }
  index: 43
  text: "Sure you haven\'t. Just checking."
  branches {
    responseText: " "
    nextNodeIndex: 9
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd2cd16434313d23a40c2c"
  }
  index: 44
  text: "We\'re just having a friendly conversation. Why would you need a shyster?"
  branches {
    responseText: "Friendly conversation, right."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "53dd3f696434313d23a41615"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "No, let me call my lawyer before saying anything else."
    nextNodeIndex: 45
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dd2d916434313d23a40c3d"
  }
  index: 45
  text: "Fine. You have that right, of course. We\'re having this conversation in your office instead of the station house as a courtesy to you and Alcamai, but if you insist on a lawyer being present, we will also need to insist to bring you in. That all right with you?"
  branches {
    responseText: "... okay, let\'s keep talking here."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "currentLoop"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "nextLoop"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "53dd3f706434313d23a41616"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "You want to arrest me, arrest me. My lawyer is going to rip you a new one."
    nextNodeIndex: 46
  }
  branches {
    responseText: "{{CC}}Threaten with a weapon{{/CC}} No, I don\'t think so. I think I\'m going to get out of here and you are going to let me."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item Holstered"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 1.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    nextNodeIndex: 66
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Fight{{/CC}} The hell with this."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 3
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53df5e86643431fe850591b9"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53dde02c643431cf41e511dd"
  }
  index: 46
  text: "All right, let\'s do this then. \n\n$(story.pc_firstname) $(story.pc_lastname), by the mutual extraterritoriality exception agreement between Hildebrantd-Kleinfort-Bernal and Alcamai Cosmetics, you are under arrest for murder of a corporate citizen. You have the right to remain silent, anything you say can and will be used against you in a court of law..."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "arrest"
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53e0b2e9643431b530059969"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53ddfb1464343133600597fd"
  }
  index: 47
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 48
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Comparison (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          float_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 50
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Comparison (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          float_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 55
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Comparison (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          float_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 60
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "No Effect"
      }
    }
    nextNodeIndex: 65
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    actions {
      ops {
        functionName: "No Effect"
      }
    }
    nextNodeIndex: 66
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 7
        }
      }
    }
    nextNodeIndex: 70
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53de2527643431346ae50ae7"
  }
  index: 48
  text: "All right, $(story.pc_polite_salutation), thank you for your co-operation. As to what this is really about ... \n\nI\'m sorry to inform you that your sister Brooklyn is dead. She has been murdered.  It happened in her home in Seattle during the last 24 hours.\n\nAs for the \"$(l.name)\", bit, it was found written on the scene. As she had HBK citizenship and insurance, we are looking into this matter in Omaha."
  branches {
    responseText: "Brooklyn is what now? Is this your sick idea of a joke?"
    nextNodeIndex: 49
  }
  branches {
    responseText: "... I see. Thank you for being so very upfront about it, and not acting like a total dick at all. You going to tell me what exactly happened to her?"
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "... I was afraid that was where we were heading. Brooklyn. God. What happened to her?"
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "(Say nothing)"
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "53da5ef2643431a4970041a8"
          }
          args {
            string_value: "PCThingsKnown"
          }
        }
      }
      args {
        call_value {
          functionName: "Append (string)"
          args {
            string_value: "BrooklynMurdered,"
          }
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
              }
              args {
                string_value: "PCThingsKnown"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "53da5ef2643431a4970041a8"
          }
          args {
            string_value: "PCThingsKnown"
          }
        }
      }
      args {
        call_value {
          functionName: "Append (string)"
          args {
            string_value: "NicknameAtMurderScene,"
          }
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
              }
              args {
                string_value: "PCThingsKnown"
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53e0ac9d643431b53005979b"
  }
  index: 49
  text: "No, it isn\'t. My condolences."
  branches {
    responseText: "What happened to her?"
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df2a846434317875058fc5"
  }
  index: 50
  text: "I understand that you\'re upset, but we cannot give you details of an ongoing investigation at this point.\n\nHowever, HBK Claims Investigation Dept. wanted us to talk to you, since there are several factors here which make you a person of interest."
  branches {
    responseText: "Seriously? My sister is murdered, and you think I had something to do with it?"
    nextNodeIndex: 51
  }
  branches {
    responseText: "Lawyer. Right now."
    nextNodeIndex: 52
  }
  branches {
    responseText: "{{CC}}Charisma 2{{/CC}} Surely you don\'t really think I\'m the one you\'re looking for?"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 53
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df3ba3643431277b0592a7"
  }
  index: 51
  text: "It is possible, yes."
  branches {
    responseText: "Go to hell."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "I didn\'t."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df3a17643431277b058fc3"
  }
  index: 52
  text: "Oh you\'ll get a lawyer all right."
  branches {
    responseText: " "
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df468e643431277b059578"
  }
  index: 53
  text: "... Probably not. We\'re going to request you to stay in Omaha, in case we need to ask some more questions.\n\nWe\'re sorry for your loss, $(story.pc_salutation) $(story.pc_lastname)."
  branches {
    responseText: "All right, I can do that. Now, excuse me please?"
    nextNodeIndex: -1
  }
  branches {
    responseText: "You are going to catch the one who really did it, right?"
    nextNodeIndex: 54
  }
  branches {
    responseText: "Goodbye."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df468e643431277b05957c"
  }
  index: 54
  text: "We will. Or someone in Seattle will.\n\n{{GM}}A reassuring tone of voice really work for detective Wainwright.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df432a643431277b05943d"
  }
  index: 55
  text: "We aren\'t going to share any more details with you at this time. HBK Claims Investigation Dept. has tagged you as a person of interest in the case, and I can see why."
  branches {
    responseText: "Seriously? My sister is murdered, and you think I had something to do with it?"
    nextNodeIndex: 56
  }
  branches {
    responseText: "Lawyer. Right now."
    nextNodeIndex: 57
  }
  branches {
    responseText: "{{CC}}Charisma 3{{/CC}} Look, you tell me my sister is dead. I haven\'t even seen her in years, and then you turn up to tell me she\'s been murdered! I had nothing to do with it! I was in the same city, yes, but I didn\'t even know she lived in Seattle these days!"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 58
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df432a643431277b059440"
  }
  index: 56
  text: "That\'s what it looks like to us."
  branches {
    responseText: "Go to hell."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "I didn\'t."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df432a643431277b059449"
  }
  index: 57
  text: "Oh you\'ll get a lawyer all right."
  branches {
    responseText: " "
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df46ca643431277b059598"
  }
  index: 58
  text: "We\'re sorry for your loss, $(story.pc_salutation) $(story.pc_lastname).\n\nWe\'ll have to look into the matter further. As of now, don\'t leave town."
  branches {
    responseText: "All right, I can do that. Now, excuse me please?"
    nextNodeIndex: -1
  }
  branches {
    responseText: "You are going to catch the one who really did it, right?"
    nextNodeIndex: 59
  }
  branches {
    responseText: "Goodbye."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df46ca643431277b05959c"
  }
  index: 59
  text: "We will. Or someone in Seattle will.\n\n{{GM}}A reassuring tone of voice really work for detective Wainwright.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df4022643431277b059413"
  }
  index: 60
  text: "Why don\'t you tell us."
  branches {
    responseText: "Seriously? My sister is murdered, and you think I had something to do with it?"
    nextNodeIndex: 61
  }
  branches {
    responseText: "Lawyer. Right now."
    nextNodeIndex: 62
  }
  branches {
    responseText: "{{CC}}Charisma 4{{/CC}} I can\'t believe this. I can\'t believe any of this. I loved Brooklyn, even if I hadn\'t seen her in ages. And I didn\'t think to go see her when I was in Seattle, didn\'t even know she was there. If I had gone to her ... maybe I could have stopped whoever killed her. But I didn\'t, I wasn\'t there when she needed me... Arrest me if you like, I don\'t even care."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 63
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df4022643431277b059416"
  }
  index: 61
  text: "That\'s what it looks like to us."
  branches {
    responseText: "Go to hell."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "I didn\'t."
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df4022643431277b05941f"
  }
  index: 62
  text: "Oh you\'ll get a lawyer all right."
  branches {
    responseText: " "
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df474d643431277b0595a6"
  }
  index: 63
  text: "{{GM}}Tamaryk glances sharply at her partner, who shrugs.{{/GM}}\n\nWe\'re sorry for your sister, $(story.pc_salutation) $(story.pc_lastname). As for arresting you, I hope it won\'t be necessary. Stay in town, however, and try to keep out of trouble."
  branches {
    responseText: "Yeah, I can do that. Now, excuse me please?"
    nextNodeIndex: -1
  }
  branches {
    responseText: "You are going to catch the one who really did it, right?"
    nextNodeIndex: 64
  }
  branches {
    responseText: "Goodbye."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df474d643431277b0595aa"
  }
  index: 64
  text: "We will. Or Seattle PD will.\n\n{{GM}}A reassuring tone of voice really work for detective Wainwright.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53df3b3c643431277b0592a5"
  }
  index: 65
  text: "$(story.pc_firstname) $(story.pc_lastname), by the mutual extraterritoriality exception agreement between Hildebrantd-Kleinfort-Bernal and Alcamai Cosmetics, you are under arrest for murder of a corporate citizen. You have the right to remain silent, anything you say can and will be used against you in a court of law..."
  branches {
    responseText: "{{CC}}Comply with the officers{{/CC}} This is ... I didn\'t ... hell."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 8
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53e0b2e9643431b530059969"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}Say nothing, but comply{{/CC}}"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 8
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53e0b2e9643431b530059969"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}Threaten with a weapon{{/CC}} No, I don\'t think so. I think I\'m going to get out of here and you are going to let me."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Pi 1 Fichetti Security 500"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 1.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Fight{{/CC}} The hell with this."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 3
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53df5e86643431fe850591b9"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df48d1643431277b0596cc"
  }
  index: 66
  text: "That was a terminally stupid move, $(story.pc_lastname).\n\nDo you even know how to use that thing? Put it down before someone gets hurt."
  branches {
    responseText: "Try me."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 1.5
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53df5e86643431fe850591b9"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}Surrender weapon{{/CC}} Okay, not really."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 8
        }
      }
    }
    nextNodeIndex: 67
  }
  branches {
    responseText: "{{CC}}Ranged Combat 2 + speciality {{/CC}}Do you see my hands shaking?"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Variable (int)"
                args {
                  string_value: "weaponSpec"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 7
        }
      }
    }
    nextNodeIndex: 68
  }
  branches {
    responseText: "{{CC}}Sufficiently Dangerous Perp{{/CC}} The question isn\'t whether I can shoot. The question is, do you want a firefight in the middle of a crowded office with a dozen bystanders getting in the crossfire?"
    conditions {
      ops {
        functionName: "Comparison (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          float_value: 4.7
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 0.5
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "arrest"
            }
          }
        }
        args {
          int_value: 7
        }
      }
    }
    nextNodeIndex: 69
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
}
nodes {
  idRef {
    id: "53e0b27b643431b53005982c"
  }
  index: 67
  text: "Thanks for not making us shoot you. I hate it when we have to do that."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53e0b2e9643431b530059969"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53df5c0e643431fe8505906d"
  }
  index: 68
  text: "... I think $(l.he) means it, Wainwright."
  branches {
    responseText: " "
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df5c5b643431fe85059071"
  }
  index: 69
  text: "You bastard. You\'ll get yours for this.\n\n{{GM}}She composes herself.{{/GM}}"
  branches {
    responseText: " "
    nextNodeIndex: 47
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53df5cc7643431fe85059076"
  }
  index: 70
  text: "All right, let\'s no one do anything stupid here. No one needs to get hurt.\n\nThe ball is in your court, $(story.pc_lastname). What happens now? We\'re not going let you get any hostages, including us, so you can forget about that right away."
  branches {
    responseText: "First, you\'re going to tell me what this is all about. Why are you here and what do you want to bust me for?"
    conditions {
      ops {
        functionName: "Evaluate Tag Pattern for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "KnowsBrooklynMurdered"
        }
      }
    }
    nextNodeIndex: 71
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53dfce6b643431d21a05960d"
    }
  }
  branches {
    responseText: "I\'m going to get some stuff from my locker, and then I\'m going to leave. You will let me, or things will turn nasty."
    nextNodeIndex: 72
  }
  branches {
    responseText: "{{CC}}Fight{{/CC}} I\'m thinking bullets."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 1.5
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53df5e86643431fe850591b9"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Get Out of Alcamai Cosmetics"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "53da5ef2643431a4970041a8"
          }
          args {
            string_value: "WantedLevel"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
}
nodes {
  idRef {
    id: "53dfcea4643431d21a05960f"
  }
  index: 71
  text: "{{GM}}Wainwright looks at you coldly.{{/GM}}\n\nYour sister, Brooklyn $(story.pc_lastname) is dead. She was murdered in her home in Seattle, around the time you were in town. She had insurance with HBK, and they subcontracted checking you out to us, as she\'d listed you as next of kin - as apparently you had her, some years back. We were a bit skeptical, since on the surface you seemed to be nothing but a soft wageslave. Guess their hunch was right."
  branches {
    responseText: "Their hunch was bullshit. Now I\'m going to get some stuff from my desk, and then I\'m going to leave. You will let me, or things will turn nasty."
    nextNodeIndex: 72
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Fight{{/CC}} Hunch this."
    actions {
      ops {
        functionName: "Add To Variable (float)"
        args {
          call_value {
            functionName: "Get Variable (float)"
            args {
              string_value: "Suspicion"
            }
          }
        }
        args {
          float_value: 1.5
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "53df5e86643431fe850591b9"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc9981643431f9fc06daca"
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "53da5ef2643431a4970041a8"
          }
          args {
            string_value: "PCThingsKnown"
          }
        }
      }
      args {
        call_value {
          functionName: "Append (string)"
          args {
            string_value: "BrooklynMurdered,"
          }
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
              }
              args {
                string_value: "PCThingsKnown"
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53dfbf906434313c150592c0"
  }
  index: 72
  text: "All right, let\'s do exactly that."
  branches {
    responseText: ""
    nextNodeIndex: 73
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "53dc96ed643431f9fc06dac9"
  }
}
nodes {
  idRef {
    id: "53dfbfa96434313c150592c3"
  }
  index: 73
  text: ""
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53df5fb5643431fe8505954a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53dfc1936434313c150592c4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
roots {
  responseText: ""
  nextNodeIndex: 0
}
